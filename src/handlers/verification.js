import { ActionRowBuilder, ButtonBuilder, ButtonStyle, PermissionFlagsBits } from "discord.js";
import { CONFIG } from "../config.js";

/**
 * Envia um painel simples de verificac√£o (opcional).
 * Ajuste o canal via VERIFICATION_CHANNEL_ID no .env.
 */
export async function sendVerificationPanel(client) {
  try {
    if (!CONFIG.CHANNELS.VERIFICATION) return;

    const channel = await client.channels.fetch(CONFIG.CHANNELS.VERIFICATION);
    if (!channel || !channel.isTextBased()) {
      console.warn("[BLACKBOT:WARN] Canal de verifica√ß√£o n√£o √© de texto ou n√£o existe.");
      return;
    }

    const row = new ActionRowBuilder().addComponents(
      new ButtonBuilder().setCustomId("open_ticket_doacoes").setLabel("üí∞ Doa√ß√µes").setStyle(ButtonStyle.Primary),
      new ButtonBuilder().setCustomId("open_ticket_denuncia").setLabel("üö® Den√∫ncia").setStyle(ButtonStyle.Danger),
      new ButtonBuilder().setCustomId("open_ticket_suporte").setLabel("‚öôÔ∏è Suporte T√©cnico").setStyle(ButtonStyle.Secondary)
    );

    await channel.send({ content: "üé´ **Abra um ticket privado** selecionando uma op√ß√£o abaixo:", components: [row] });
    console.log("[BLACKBOT] Painel de verifica√ß√£o enviado.");
  } catch (err) {
    console.error("[BLACKBOT:ERR] Falha ao enviar painel de verifica√ß√£o:", err);
  }
}
